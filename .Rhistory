scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange() +
geom_line(aes(group=1)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(seq(0, 10, 2)), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange() +
#geom_line(aes(group=1)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(seq(0, 10, 2)), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.5)) +
#geom_line(aes(group=1)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(seq(0, 10, 2)), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
#geom_line(aes(group=1)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(seq(0, 10, 2)), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
#geom_line(aes(group=1)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(seq(0, 10, 2)), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
xlim(c(0, 10)) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
#geom_line(aes(group=1)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(seq(0, 10, 2)), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
seq(0, .1, .02)
paste0(seq(seq(0, 10, 2)), "%")
(seq(0, 10, 2)
(seq(0, 10, 2))
paste0(seq(0, 10, 2)), "%")
paste0(seq(0, 10, 2), "%")
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
#geom_line(aes(group=1)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(0, 10, 2), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
geom_line(aes(group=mvpa)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(0, 10, 2), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
geom_line(aes(group=mvpa), osition=position_dodge(.35)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(0, 10, 2), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
geom_line(aes(group=mvpa), position=position_dodge(.35)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(0, 10, 2), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º quartil de atv. física", "2º quartil de atv. física",
"3º quartil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggsave("figuras/plot2_int_osteo_cat.png", dpi=600, unit="in", height=6, width=7)
car::vif(osteo_interaction_cat)
# load packages
library(tidyverse); library(here); library(survey); library(broom);
library(writexl); library(dagitty); library(patchwork); library(glue);
library(gtsummary); library(marginaleffects); library(ggeffects);
library(splines); library(colorspace); library(gridExtra)
# no scientific notation
options(scipen=999)
#custom ggplot theme
theme_avp <- function() {
theme_bw(base_size=10) +
theme(axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9),
panel.grid.minor = element_blank())
}
# function for assessing svyGLM assumptions
svy_check_model <- function(model) {
dat <- tibble(fitted = fitted(model),
resid = resid(model),
std_resid = svydiags::svystdres(model, stvar="SDMVSTRA", clvar="SDMVPSU")[["stdresids"]])
linearity_p_std <- ggplot(dat, aes(x=fitted, y=std_resid)) +
geom_point(alpha=.05) +
geom_hline(yintercept=0,color="red",linetype="dashed") +
theme_minimal() +
labs(title = "Fitted values e resíduos padronizados",
x="Fitted values",
y="Resíduos padronizados")
normality_p <- ggplot(dat, aes(x = resid)) +
geom_histogram(color = "black", fill = "lightblue") +
theme_minimal() +
labs(title = "Histograma de resíduos",
x = "Resíduos",
y = "Frequência")
qq_p_std <- ggplot(dat, aes(sample = std_resid)) +
stat_qq(alpha=.2) +
stat_qq_line(color = "red") +
theme_minimal() +
labs(title = "Q-Q plot de resíduos padronizados",
x = "Quantis teóricos",
y = "Quantis amostrais")
vif_table <- car::vif(model) |> as.data.frame() |>
rownames_to_column("Variável") |> select('Variável', 'GVIF') |>
rename(VIF = GVIF) |>
mutate('Variável' = c("PTN", "Atividade Fisica", "CHO", "LIP", "Gênero",
"Peso corporal", "Altura", "Idade", "Uso glicocorticoide",
"Interação PTN:Atv Fisica"),
VIF = round(VIF, 2)) |> as.data.frame() |> tableGrob(rows = NULL)
p_full <- (linearity_p_std + normality_p) / (qq_p_std + vif_table)
return(p_full)
}
# function for df for predictions
get_pred_df <- function(design, predictor) {
if (predictor == "PTN") {
newdata <- data.frame(
PTN = design$variables$PTN,
total_vig_and_mod_min = mean(design$variables$total_vig_and_mod_min),
CHO = mean(design$variables$CHO),
LIP = mean(design$variables$LIP),
RIAGENDR = "1",
BMXWT = mean(design$variables$BMXWT),
BMXHT = mean(design$variables$BMXHT),
RIDAGEYR = mean(design$variables$RIDAGEYR),
days_gc = mean(design$variables$days_gc))
} else {
newdata <- data.frame(
PTN = mean(design$variables$PTN),
total_vig_and_mod_min = design$variables$total_vig_and_mod_min,
CHO = mean(design$variables$CHO),
LIP = mean(design$variables$LIP),
RIAGENDR = "1",
BMXWT = mean(design$variables$BMXWT),
BMXHT = mean(design$variables$BMXHT),
RIDAGEYR = mean(design$variables$RIDAGEYR),
days_gc = mean(design$variables$days_gc))
}
return(newdata)
}
# load raw dataset
load("data/nhanes_raw_dataframe.Rdata")
rh_dxa_all <- nhanes_raw_dataframe |>
mutate(kcal = case_when(
DRDINT.x == 2 ~ ((DR1TKCAL+DR2TKCAL)/2), # these lines calculate the mean between two dietary recalls, when two are available
DRDINT.x == 1 ~ DR1TKCAL # or just pick the first one that is available, if only one is.
)) |>
mutate(PTN = case_when(
DRDINT.x == 2 ~ ((DR1TPROT+DR2TPROT)/2), # same for other nutrients.
DRDINT.x == 1 ~ DR1TPROT
)) |>
mutate(CHO = case_when(
DRDINT.x == 2 ~ ((DR1TCARB+DR2TCARB)/2),
DRDINT.x == 1 ~ DR1TCARB
)) |>
mutate(LIP = case_when(
DRDINT.x == 2 ~ ((DR1TTFAT+DR2TTFAT)/2),
DRDINT.x == 1 ~ DR1TTFAT
))
rh_dxa_all <- rh_dxa_all |>
mutate(PTNgkg = PTN/BMXWT) |>
mutate(femur_popmean_male = 1.04, # Reference values from NHANES III, Looker AC et al 1997.
femur_popsd_male = 0.144,
femurneck_popmean_male = 0.93,
femurneck_popsd_male = 0.137,
femur_popmean_female = 0.94,
femur_popsd_female = 0.122,
femurneck_popmean_female = 0.86,
femurneck_popsd_female = 0.12,
femur_t_score = case_when(
RIAGENDR == "1" ~ ((DXXOFBMD-femur_popmean_male)/femur_popsd_male),
RIAGENDR == "2" ~ ((DXXOFBMD-femur_popmean_female)/femur_popsd_female))
) |>
mutate(femurneck_t_score = case_when(
RIAGENDR == "1" ~ ((DXXNKBMD-femurneck_popmean_male)/femurneck_popsd_male),
RIAGENDR == "2" ~ ((DXXNKBMD-femurneck_popmean_female)/femurneck_popsd_female))) |>
mutate(femur_osteoporosis = as.factor(case_when(
femur_t_score >= -2.5 ~ "No",
femur_t_score < -2.5 ~ "Yes"
)),
femurneck_osteoporosis = as.factor(case_when(
femurneck_t_score >= -2.5 ~ "No",
femurneck_t_score < -2.5 ~ "Yes"
)),
ALM = DXDLALE + DXDRALE + DXDLLLE + DXDRLLE,
ALM_BMI = (ALM/1000)/BMXBMI,
sarc_class = as.factor(case_when(RIAGENDR == "1" & ALM_BMI <.789 ~ '1',
RIAGENDR == "2" & ALM_BMI <.512 ~ '1',
RIAGENDR == "1" & ALM_BMI >=.789 ~ '0',
RIAGENDR == "2" & ALM_BMI >=.512 ~ '0')))
rh_dxa_all <- rh_dxa_all |>
mutate(weights_all = case_when(
DRDINT.x == 2 ~ (WTDR2D.x * (1/7)),
DRDINT.x == 1 ~ (WTDRD1.x * (1/7))),
weights_all_exam = WTMEC2YR * (1/7))
rh_dxa_all <- rh_dxa_all |>
# cleaning variables first
mutate(PAQ605 = case_when(PAQ605 %in% c(7, 9) ~ NA_real_, # these are codes for non-responses within the questionnaires, important to remove them
TRUE ~ PAQ605),
PAQ610 = case_when(PAQ610 %in% c(77, 99) ~ NA_real_,
TRUE ~ PAQ610),
PAD615 = case_when(PAD615 %in% c(7777, 9999) ~ NA_real_,
TRUE ~ PAD615),
PAQ620 = case_when(PAQ620 %in% c(7, 9) ~ NA_real_,
TRUE ~ PAQ620),
PAQ625 = case_when(PAQ625 %in% c(77, 99) ~ NA_real_,
TRUE ~ PAQ625),
PAD630 = case_when(PAD630 %in% c(7777, 9999) ~ NA_real_,
TRUE ~ PAD630),
PAQ635 = case_when(PAQ635 %in% c(7, 9) ~ NA_real_,
TRUE ~ PAQ635),
PAQ640 = case_when(PAQ640 %in% c(77, 99) ~ NA_real_,
TRUE ~ PAQ640),
PAD645 = case_when(PAD645 %in% c(7777, 9999) ~ NA_real_,
TRUE ~ PAD645),
PAQ650 = case_when(PAQ650 %in% c(7, 9) ~ NA_real_,
TRUE ~ PAQ650),
PAQ655 = case_when(PAQ655 %in% c(77, 99) ~ NA_real_,
TRUE ~ PAQ655),
PAD660 = case_when(PAD660 %in% c(7777, 9999) ~ NA_real_,
TRUE ~ PAD660),
PAQ665 = case_when(PAQ665 %in% c(7, 9) ~ NA_real_,
TRUE ~ PAQ665),
PAQ670 = case_when(PAQ670 %in% c(77, 99) ~ NA_real_,
TRUE ~ PAQ670),
PAD675 = case_when(PAD675 %in% c(7777, 9999) ~ NA_real_,
TRUE ~ PAD675),
# then calculate METs per domain and overall
work_vig_min = if_else(PAQ605 == 2, 0, PAQ610 * PAD615), # calculating MET-minutes based on GPAQ questionnaire scoring
work_mod_min = if_else(PAQ620 == 2, 0, PAQ625 * PAD630),
work_vig_and_mod_min = work_vig_min + work_mod_min,
transport_MET = if_else(PAQ635 == 2, 0, PAQ640 * PAD645),
rec_vig_min = if_else(PAQ650 == 2, 0, PAQ655 * PAD660),
rec_mod_min = if_else(PAQ665 == 2, 0, PAQ670 * PAD675),
rec_vig_and_mod_min = rec_vig_min + rec_mod_min,
total_vig_min = work_vig_min + work_mod_min,
total_vig_and_mod_min = work_vig_and_mod_min + rec_vig_and_mod_min,
work_MET = (work_vig_min * 8) + (work_mod_min * 4),
rec_MET = (rec_vig_min * 8) + (rec_mod_min * 4),
MET = work_MET + rec_MET + transport_MET, # summing it up
# classification based on METs
MET_class = case_when(MET < 600 ~ "Very low PA",
MET >= 600 & MET < 1200 ~ "Moderate PA",
MET >= 1200 & MET < 1800 ~ "High PA",
MET >= 1800 ~ "Very high PA")
)
load("data/medication_df.Rdata")
# create a string with the names of glucocorticoids
gluc_names <- c('^(DEFLAZACORT|PREDNISOLONE|DEXAMETHASONE|HYDROCORTISONE|METHYLPREDNISOLONE|PREDNISONE|CORTISONE)$')
med_df <- med_df |>
mutate(uses_gc = if_else(stringr::str_detect(RXDDRUG, gluc_names), 1, 0), # detect these names
days_gc = case_when(uses_gc == 0 ~ 0,
RXDDAYS %in% c(77777, 99999) ~ 77777,
TRUE ~ RXDDAYS * uses_gc)) |>
select(SEQN, uses_gc, days_gc, RXDDRUG) |>
filter(stringr::str_detect(RXDDRUG, gluc_names)) |>
group_by(SEQN) |> # sometimes some participants would report using more than one GC type,
summarise(days_gc = mean(days_gc)) |> # so we group by participant and take the mean of both medications to have one single number
ungroup()
rh_dxa_all <- rh_dxa_all |> full_join(med_df) |>
mutate(days_gc = if_else(is.na(days_gc), 0, days_gc), # if days_gc is NA, it means the person does not take GC, i.e. a vlaue of 0
days_gc = if_else(days_gc == 77777, NA_real_, days_gc)) # non response code
rh_dxa_all_analyse <- subset(rh_dxa_all, !is.na(SDMVPSU) & !is.na(SDMVSTRA)) |>
dplyr::select(SEQN, PTN, CHO, LIP, kcal, PTNgkg, DXDTOLE, DXDTOBMD, DXXOFBMD,
DXXOSBMD, RIAGENDR, BMXHT, BMXWT, ALM, ALM_BMI, sarc_class, RIDAGEYR,
SDMVPSU, SDMVSTRA, weights_all, RIDRETH1, BMXBMI, femur_t_score, femurneck_t_score,
femurneck_osteoporosis, DR1DRSTZ, DXAEXSTS, DXAFMRST, DXASPNST,
DXXNKBMD, MET, MET_class,
work_vig_min, rec_vig_min, total_vig_min,
days_gc, cycle,
work_vig_and_mod_min, rec_vig_and_mod_min,
total_vig_and_mod_min,
DXDLALE, DXDRALE, DXDLLLE, DXDRLLE, ALM, ALM_BMI)
# set survey
# set individuals without sample weights to 0, to exclude later
rh_dxa_all_analyse <- rh_dxa_all_analyse |>
mutate(weights_all = if_else(is.na(weights_all), 0, weights_all)) |>
mutate(RIAGENDR = as.factor(RIAGENDR),
cycle = as.factor(cycle)) # set categorical variables to factor
NHANES_all <- svydesign(data=rh_dxa_all_analyse,
id=~SDMVPSU,
strata=~SDMVSTRA,
weights=~weights_all,
nest=TRUE)
nrow(NHANES_all$variables)
NHANES_rh <- subset(NHANES_all, weights_all != 0) # excluding individuals without sample weight
nrow(NHANES_rh$variables)
NHANES_rh <- subset(NHANES_rh, DR1DRSTZ == "1") # selecting adequate r24 data
nrow(NHANES_rh$variables)
NHANES_rh <- subset(NHANES_rh, RIDAGEYR >= 18 & RIDAGEYR <= 86) # selecting adults
nrow(NHANES_rh$variables) # adults older than 85 are still coded as 85 in NHANES.
NHANES_rh <- subset(NHANES_rh, !is.na(total_vig_and_mod_min)) # sem atv fisica
nrow(NHANES_rh$variables)
NHANES_subset_lm <- subset(NHANES_rh, DXAEXSTS == "1" & !is.na(DXDTOLE))
nrow(NHANES_subset_lm$variables)
NHANES_subset_femur <- subset(NHANES_rh, DXAFMRST == "1" & !is.na(DXXOFBMD))
nrow(NHANES_subset_femur$variables)
NHANES_subset_lm <- subset(NHANES_subset_lm, DXAEXSTS == "1" & !is.na(DXDTOLE) # make sure subsets
& !is.na(PTN) & !is.na(CHO) & !is.na(LIP) # have available data on all covariates
& !is.na(RIAGENDR) & !is.na(BMXWT) & !is.na(RIDAGEYR)
& !is.na(total_vig_and_mod_min) & !is.na(days_gc) & !is.na(BMXHT))
NHANES_subset_sarc <- subset(NHANES_subset_lm, DXAEXSTS == "1" & !is.na(DXDTOLE) # make sure subsets
& !is.na(PTN) & !is.na(CHO) & !is.na(LIP) # have available data on all covariates
& !is.na(RIAGENDR) & !is.na(BMXWT) & !is.na(RIDAGEYR)
& !is.na(total_vig_and_mod_min) & !is.na(days_gc) & !is.na(BMXHT) & !is.na(sarc_class))
nrow(NHANES_subset_lm$variables) # subset sample size
nrow(NHANES_subset_sarc$variables) # subset sample size
NHANES_subset_femur <- subset(NHANES_subset_femur, DXAFMRST == "1" & !is.na(DXXOFBMD) & !is.na(DXXNKBMD)
& !is.na(PTN) & !is.na(CHO) & !is.na(LIP)
& !is.na(RIAGENDR) & !is.na(BMXWT) & !is.na(RIDAGEYR)
& !is.na(total_vig_and_mod_min) & !is.na(days_gc) & !is.na(BMXHT) & !is.na(femurneck_osteoporosis))
nrow(NHANES_subset_femur$variables)
lm_dat <- as_tibble(NHANES_subset_lm$variables)
fem_dat <- as_tibble(NHANES_subset_femur$variables)
sample_dat <- reduce(list(lm_dat, fem_dat), bind_rows) |> distinct()
nrow(sample_dat) # sample size
sample_dat |> select(BMXWT, BMXHT, BMXBMI, days_gc, total_vig_and_mod_min, kcal,
CHO, PTN, LIP, DXDTOLE, ALM, ALM_BMI, DXXOFBMD, femurneck_t_score) |>
pivot_longer(everything()) |>
ggplot(aes(x=value)) +
facet_wrap(~name, scales="free") +
geom_density()
osteo_interaction <- svyglm(femurneck_osteoporosis ~ ns(PTN, 3) * poly(total_vig_and_mod_min, 3) + CHO + LIP +
RIAGENDR + BMXWT + BMXHT +
+ RIDAGEYR + days_gc, family=quasibinomial,
design=NHANES_subset_femur)
car::Anova(osteo_interaction, "II", "F")
AIC(osteo_model_atvPoly3_simple, osteo_interaction)
anova(osteo_model_atvPoly3_simple, osteo_interaction)
PTN_tile <- svyquantile(~PTN, design=NHANES_subset_femur, quantiles=c(.25, .5, .75))
atv_tile <- svyquantile(~total_vig_and_mod_min, design=NHANES_subset_femur, quantiles=c(.33, .66))
NHANES_subset_femur <- update(NHANES_subset_femur, PTN_tiles = as.factor(case_when(PTN < PTN_tile$PTN[1] ~ "1",
PTN >= PTN_tile$PTN[1] & PTN < PTN_tile$PTN[2] ~ "2",
PTN >= PTN_tile$PTN[2] & PTN < PTN_tile$PTN[3] ~ "3",
PTN >= PTN_tile$PTN[4] ~ "4")))
NHANES_subset_femur <- update(NHANES_subset_femur, mvpa_tiles = as.factor(case_when(total_vig_and_mod_min < atv_tile$total_vig_and_mod_min[1] ~ "1",
total_vig_and_mod_min >= atv_tile$total_vig_and_mod_min[1] & total_vig_and_mod_min < atv_tile$total_vig_and_mod_min[2] ~ "2",
total_vig_and_mod_min >= atv_tile$total_vig_and_mod_min[3] ~ "3")))
osteo_interaction_cat <- svyglm(femurneck_osteoporosis_num ~ PTN_tiles * mvpa_tiles + CHO + LIP +
RIAGENDR + BMXWT + BMXHT +
+ RIDAGEYR + days_gc, family=quasibinomial(),
design=NHANES_subset_femur)
PTN_tile <- svyquantile(~PTN, design=NHANES_subset_femur, quantiles=c(.25, .5, .75))
atv_tile <- svyquantile(~total_vig_and_mod_min, design=NHANES_subset_femur, quantiles=c(.33, .66))
NHANES_subset_femur <- update(NHANES_subset_femur, PTN_tiles = as.factor(case_when(PTN < PTN_tile$PTN[1] ~ "1",
PTN >= PTN_tile$PTN[1] & PTN < PTN_tile$PTN[2] ~ "2",
PTN >= PTN_tile$PTN[2] & PTN < PTN_tile$PTN[3] ~ "3",
PTN >= PTN_tile$PTN[4] ~ "4")))
NHANES_subset_femur <- update(NHANES_subset_femur, mvpa_tiles = as.factor(case_when(total_vig_and_mod_min < atv_tile$total_vig_and_mod_min[1] ~ "1",
total_vig_and_mod_min >= atv_tile$total_vig_and_mod_min[1] & total_vig_and_mod_min < atv_tile$total_vig_and_mod_min[2] ~ "2",
total_vig_and_mod_min >= atv_tile$total_vig_and_mod_min[3] ~ "3")))
osteo_interaction_cat <- svyglm(femurneck_osteoporosis_num ~ PTN_tiles * mvpa_tiles + CHO + LIP +
RIAGENDR + BMXWT + BMXHT +
+ RIDAGEYR + days_gc, family=quasibinomial(),
design=NHANES_subset_femur)
osteo_interaction_cat <- svyglm(femurneck_osteoporosis ~ PTN_tiles * mvpa_tiles + CHO + LIP +
RIAGENDR + BMXWT + BMXHT +
+ RIDAGEYR + days_gc, family=quasibinomial(),
design=NHANES_subset_femur)
summary(osteo_interaction_cat)
car::Anova(osteo_interaction_cat, type="II", test="F")
summary(osteo_interaction_cat)
osteo_int_pred_df <- ggaverage(osteo_interaction_cat, c("PTN_tiles", "mvpa_tiles")) |> as_tibble() |>
rename(ptn = x, mvpa = group)
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
geom_line(aes(group=mvpa), position=position_dodge(.35)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(0, 10, 2), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º tercil de atv. física", "2º tercil de atv. física",
"3º tercil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggplot(osteo_int_pred_df, aes(x=ptn, y=predicted, ymin=conf.low, ymax=conf.high, color=mvpa)) +
#facet_wrap(~mvpa, labeller=as_labeller(c("1" = "1º tercil de atv. física",
#                                       "2" = "2º tercil de atv. física",
#                                       "3" =  "3º tercil de atv. física"))) +
geom_pointrange(position=position_dodge(.35)) +
#geom_line(aes(group=mvpa), position=position_dodge(.35)) +
scale_y_continuous(limits=c(0, .1),
breaks=seq(0, .1, .02),
labels=paste0(seq(0, 10, 2), "%")) +
scale_color_discrete_sequential(palette = "Reds", l1 = 25, c2 = 150, p1 = 1,
labels=c("1º tercil de atv. física", "2º tercil de atv. física",
"3º tercil de atv. física")) +
labs(x="Quartis de consumo de proteína", y="Probabilidade de osteoporose (%)",
color="Tercis de atividade\nfísica moderada\ne vigorosa") +
scale_x_discrete(labels=c("1º quartil", "2º quartil", "3º quartil", "4º quartil")) +
theme_avp()
ggsave("figuras/plot2_int_osteo_cat.png", dpi=600, unit="in", height=4, width=7)
ggsave("figuras/plot2_int_osteo_cat.png", dpi=600, unit="in", height=5, width=7)
ggsave("figuras/plot2_int_osteo_cat.png", dpi=600, unit="in", height=4.5, width=7)
car::Anova(osteo_interaction_cat, type="II", test="F")
